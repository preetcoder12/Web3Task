{"ast":null,"code":"var _jsxFileName = \"/home/preet/Downloads/web3task/Web3Task/Frontend/websocket-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useWebSocket from './UseWebSocket'; // Corrected path if it's in the same folder\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WEBSOCKET_URL = 'ws://localhost:8080';\nfunction App() {\n  _s();\n  const {\n    isConnected,\n    lastMessage,\n    error,\n    sendMessage\n  } = useWebSocket(WEBSOCKET_URL);\n  const [gradientWidth, setGradientWidth] = useState(0); // State for gradient bar width\n  const [isAnimationRunning, setIsAnimationRunning] = useState(false);\n  const [showContent, setShowContent] = useState(false); // To show \"Apple Intelligence\" after animation\n\n  useEffect(() => {\n    if (lastMessage && isAnimationRunning) {\n      // Assuming 'lastMessage' contains a 'progress' property from 0-100\n      if (typeof lastMessage.progress === 'number') {\n        setGradientWidth(lastMessage.progress);\n        if (lastMessage.progress >= 100) {\n          // Animation complete\n          setShowContent(true);\n          // Optionally, send a STOP to backend if this is a one-time animation\n          // sendMessage({ type: 'STOP_ANIMATION' });\n          // setIsAnimationRunning(false); // Depends on if you want it to run once or continuously\n        }\n      }\n    }\n  }, [lastMessage, isAnimationRunning]);\n  const handleStartAnimation = () => {\n    if (isConnected) {\n      setGradientWidth(0); // Reset width\n      setShowContent(false); // Hide content\n      sendMessage({\n        type: 'START_ANIMATION'\n      });\n      setIsAnimationRunning(true);\n    } else {\n      alert('Not connected to WebSocket server.');\n    }\n  };\n  const handleStopAnimation = () => {\n    if (isConnected) {\n      sendMessage({\n        type: 'STOP_ANIMATION'\n      });\n      setIsAnimationRunning(false);\n      // Optional: reset animation state on stop\n      setGradientWidth(0);\n      setShowContent(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animation-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gradient-bar\",\n        style: {\n          width: `${gradientWidth}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), showContent && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"animation-text\",\n        children: \"Apple Intelligence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartAnimation,\n        disabled: !isConnected || isAnimationRunning,\n        children: \"Start Animation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStopAnimation,\n        disabled: !isConnected || !isAnimationRunning,\n        children: \"Stop Animation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"82G/jXnXcB15xj2XKaa8FQ1mEpo=\", false, function () {\n  return [useWebSocket];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useWebSocket","jsxDEV","_jsxDEV","WEBSOCKET_URL","App","_s","isConnected","lastMessage","error","sendMessage","gradientWidth","setGradientWidth","isAnimationRunning","setIsAnimationRunning","showContent","setShowContent","progress","handleStartAnimation","type","alert","handleStopAnimation","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/preet/Downloads/web3task/Web3Task/Frontend/websocket-client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useWebSocket from './UseWebSocket'; // Corrected path if it's in the same folder\nimport './App.css';\n\nconst WEBSOCKET_URL = 'ws://localhost:8080';\n\nfunction App() {\n  const { isConnected, lastMessage, error, sendMessage } = useWebSocket(WEBSOCKET_URL);\n  const [gradientWidth, setGradientWidth] = useState(0); // State for gradient bar width\n  const [isAnimationRunning, setIsAnimationRunning] = useState(false);\n  const [showContent, setShowContent] = useState(false); // To show \"Apple Intelligence\" after animation\n\n  useEffect(() => {\n    if (lastMessage && isAnimationRunning) {\n      // Assuming 'lastMessage' contains a 'progress' property from 0-100\n      if (typeof lastMessage.progress === 'number') {\n        setGradientWidth(lastMessage.progress);\n        if (lastMessage.progress >= 100) {\n          // Animation complete\n          setShowContent(true);\n          // Optionally, send a STOP to backend if this is a one-time animation\n          // sendMessage({ type: 'STOP_ANIMATION' });\n          // setIsAnimationRunning(false); // Depends on if you want it to run once or continuously\n        }\n      }\n    }\n  }, [lastMessage, isAnimationRunning]);\n\n  const handleStartAnimation = () => {\n    if (isConnected) {\n      setGradientWidth(0); // Reset width\n      setShowContent(false); // Hide content\n      sendMessage({ type: 'START_ANIMATION' });\n      setIsAnimationRunning(true);\n    } else {\n      alert('Not connected to WebSocket server.');\n    }\n  };\n\n  const handleStopAnimation = () => {\n    if (isConnected) {\n      sendMessage({ type: 'STOP_ANIMATION' });\n      setIsAnimationRunning(false);\n      // Optional: reset animation state on stop\n      setGradientWidth(0);\n      setShowContent(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Remove the existing h1 and p if you want a clean slate for the animation */}\n      {/* <h1>Real-time Animation System</h1>\n      <p>Connection Status: {isConnected ? 'Connected' : `Disconnected (${error || 'Unknown error'})`}</p> */}\n\n      <div className=\"animation-container\">\n        <div\n          className=\"gradient-bar\"\n          style={{ width: `${gradientWidth}%` }}\n        ></div>\n        {showContent && (\n          <h2 className=\"animation-text\">Apple Intelligence</h2>\n        )}\n      </div>\n\n      <div className=\"controls\">\n        <button onClick={handleStartAnimation} disabled={!isConnected || isAnimationRunning}>\n          Start Animation\n        </button>\n        <button onClick={handleStopAnimation} disabled={!isConnected || !isAnimationRunning}>\n          Stop Animation\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}