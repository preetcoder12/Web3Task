{"ast":null,"code":"var _s = $RefreshSig$();\n// UseWebSocket.js\nimport { useState, useEffect, useCallback } from 'react';\nfunction UseWebSocket(url) {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastMessage, setLastMessage] = useState(null);\n  useEffect(() => {\n    const ws = new WebSocket(url);\n    ws.onopen = () => {\n      console.log('Connected to WebSocket');\n      setIsConnected(true);\n    };\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        setLastMessage(data);\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n      }\n    };\n    ws.onclose = () => {\n      console.log('Disconnected from WebSocket');\n      setIsConnected(false);\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n      setIsConnected(false);\n    };\n    setSocket(ws);\n    return () => {\n      ws.close();\n    };\n  }, [url]);\n  const sendMessage = useCallback(message => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(JSON.stringify(message));\n    }\n  }, [socket]);\n  return {\n    isConnected,\n    sendMessage,\n    lastMessage\n  };\n}\n_s(UseWebSocket, \"x4xVj29lgCPV3/Yf2dDAmEhGr8w=\");\n_c = UseWebSocket;\nexport default UseWebSocket;\nvar _c;\n$RefreshReg$(_c, \"UseWebSocket\");","map":{"version":3,"names":["useState","useEffect","useCallback","UseWebSocket","url","_s","socket","setSocket","isConnected","setIsConnected","lastMessage","setLastMessage","ws","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","error","onclose","onerror","close","sendMessage","message","readyState","OPEN","send","stringify","_c","$RefreshReg$"],"sources":["/home/preet/Downloads/web3task/Web3Task/Frontend/websocket-client/src/UseWebSocket.js"],"sourcesContent":["// UseWebSocket.js\nimport { useState, useEffect, useCallback } from 'react';\n\nfunction UseWebSocket(url) {\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastMessage, setLastMessage] = useState(null);\n\n  useEffect(() => {\n    const ws = new WebSocket(url);\n    \n    ws.onopen = () => {\n      console.log('Connected to WebSocket');\n      setIsConnected(true);\n    };\n    \n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        setLastMessage(data);\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n      }\n    };\n    \n    ws.onclose = () => {\n      console.log('Disconnected from WebSocket');\n      setIsConnected(false);\n    };\n    \n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n      setIsConnected(false);\n    };\n    \n    setSocket(ws);\n    \n    return () => {\n      ws.close();\n    };\n  }, [url]);\n\n  const sendMessage = useCallback((message) => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(JSON.stringify(message));\n    }\n  }, [socket]);\n\n  return { isConnected, sendMessage, lastMessage };\n}\n\nexport default UseWebSocket;"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAExD,SAASC,YAAYA,CAACC,GAAG,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMW,EAAE,GAAG,IAAIC,SAAS,CAACT,GAAG,CAAC;IAE7BQ,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCP,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC;IAEDG,EAAE,CAACK,SAAS,GAAIC,KAAK,IAAK;MACxB,IAAI;QACF,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;QACnCR,cAAc,CAACQ,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDV,EAAE,CAACW,OAAO,GAAG,MAAM;MACjBR,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CP,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDG,EAAE,CAACY,OAAO,GAAIF,KAAK,IAAK;MACtBP,OAAO,CAACO,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCb,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDF,SAAS,CAACK,EAAE,CAAC;IAEb,OAAO,MAAM;MACXA,EAAE,CAACa,KAAK,CAAC,CAAC;IACZ,CAAC;EACH,CAAC,EAAE,CAACrB,GAAG,CAAC,CAAC;EAET,MAAMsB,WAAW,GAAGxB,WAAW,CAAEyB,OAAO,IAAK;IAC3C,IAAIrB,MAAM,IAAIA,MAAM,CAACsB,UAAU,KAAKf,SAAS,CAACgB,IAAI,EAAE;MAClDvB,MAAM,CAACwB,IAAI,CAACV,IAAI,CAACW,SAAS,CAACJ,OAAO,CAAC,CAAC;IACtC;EACF,CAAC,EAAE,CAACrB,MAAM,CAAC,CAAC;EAEZ,OAAO;IAAEE,WAAW;IAAEkB,WAAW;IAAEhB;EAAY,CAAC;AAClD;AAACL,EAAA,CA9CQF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAgDrB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}