{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState, useCallback } from 'react';\nconst useWebSocket = url => {\n  _s();\n  const ws = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastMessage, setLastMessage] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    ws.current = new WebSocket(url);\n    ws.current.onopen = () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      setError(null);\n    };\n    ws.current.onmessage = event => {\n      // console.log('Message received:', event.data);\n      try {\n        setLastMessage(JSON.parse(event.data));\n      } catch (e) {\n        setLastMessage(event.data); // If not JSON, store as is\n      }\n    };\n    ws.current.onclose = () => {\n      console.log('WebSocket disconnected');\n      setIsConnected(false);\n      setError('Disconnected from server.');\n      // Implement reconnection logic here if desired\n    };\n    ws.current.onerror = err => {\n      console.error('WebSocket error:', err);\n      setError('WebSocket connection error.');\n      setIsConnected(false);\n    };\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, [url]);\n  const sendMessage = useCallback(message => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(message));\n    } else {\n      console.warn('WebSocket is not open. Cannot send message:', message);\n    }\n  }, []);\n  return {\n    ws: ws.current,\n    isConnected,\n    lastMessage,\n    error,\n    sendMessage\n  };\n};\n_s(useWebSocket, \"o/W4G1+1VElPg+AvvaMU3Gh+qcs=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useRef","useState","useCallback","useWebSocket","url","_s","ws","isConnected","setIsConnected","lastMessage","setLastMessage","error","setError","current","WebSocket","onopen","console","log","onmessage","event","JSON","parse","data","e","onclose","onerror","err","close","sendMessage","message","readyState","OPEN","send","stringify","warn"],"sources":["/home/preet/Downloads/web3task/Web3Task/Frontend/websocket-client/src/UseWebSocket.js"],"sourcesContent":["import { useEffect, useRef, useState, useCallback } from 'react';\n\nconst useWebSocket = (url) => {\n  const ws = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastMessage, setLastMessage] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    ws.current = new WebSocket(url);\n\n    ws.current.onopen = () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      setError(null);\n    };\n\n    ws.current.onmessage = (event) => {\n      // console.log('Message received:', event.data);\n      try {\n        setLastMessage(JSON.parse(event.data));\n      } catch (e) {\n        setLastMessage(event.data); // If not JSON, store as is\n      }\n    };\n\n    ws.current.onclose = () => {\n      console.log('WebSocket disconnected');\n      setIsConnected(false);\n      setError('Disconnected from server.');\n      // Implement reconnection logic here if desired\n    };\n\n    ws.current.onerror = (err) => {\n      console.error('WebSocket error:', err);\n      setError('WebSocket connection error.');\n      setIsConnected(false);\n    };\n\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, [url]);\n\n  const sendMessage = useCallback((message) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(message));\n    } else {\n      console.warn('WebSocket is not open. Cannot send message:', message);\n    }\n  }, []);\n\n  return { ws: ws.current, isConnected, lastMessage, error, sendMessage };\n};\n\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAEhE,MAAMC,YAAY,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC5B,MAAMC,EAAE,GAAGN,MAAM,CAAC,IAAI,CAAC;EACvB,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCF,SAAS,CAAC,MAAM;IACdO,EAAE,CAACO,OAAO,GAAG,IAAIC,SAAS,CAACV,GAAG,CAAC;IAE/BE,EAAE,CAACO,OAAO,CAACE,MAAM,GAAG,MAAM;MACxBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCT,cAAc,CAAC,IAAI,CAAC;MACpBI,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC;IAEDN,EAAE,CAACO,OAAO,CAACK,SAAS,GAAIC,KAAK,IAAK;MAChC;MACA,IAAI;QACFT,cAAc,CAACU,IAAI,CAACC,KAAK,CAACF,KAAK,CAACG,IAAI,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVb,cAAc,CAACS,KAAK,CAACG,IAAI,CAAC,CAAC,CAAC;MAC9B;IACF,CAAC;IAEDhB,EAAE,CAACO,OAAO,CAACW,OAAO,GAAG,MAAM;MACzBR,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCT,cAAc,CAAC,KAAK,CAAC;MACrBI,QAAQ,CAAC,2BAA2B,CAAC;MACrC;IACF,CAAC;IAEDN,EAAE,CAACO,OAAO,CAACY,OAAO,GAAIC,GAAG,IAAK;MAC5BV,OAAO,CAACL,KAAK,CAAC,kBAAkB,EAAEe,GAAG,CAAC;MACtCd,QAAQ,CAAC,6BAA6B,CAAC;MACvCJ,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAED,OAAO,MAAM;MACX,IAAIF,EAAE,CAACO,OAAO,EAAE;QACdP,EAAE,CAACO,OAAO,CAACc,KAAK,CAAC,CAAC;MACpB;IACF,CAAC;EACH,CAAC,EAAE,CAACvB,GAAG,CAAC,CAAC;EAET,MAAMwB,WAAW,GAAG1B,WAAW,CAAE2B,OAAO,IAAK;IAC3C,IAAIvB,EAAE,CAACO,OAAO,IAAIP,EAAE,CAACO,OAAO,CAACiB,UAAU,KAAKhB,SAAS,CAACiB,IAAI,EAAE;MAC1DzB,EAAE,CAACO,OAAO,CAACmB,IAAI,CAACZ,IAAI,CAACa,SAAS,CAACJ,OAAO,CAAC,CAAC;IAC1C,CAAC,MAAM;MACLb,OAAO,CAACkB,IAAI,CAAC,6CAA6C,EAAEL,OAAO,CAAC;IACtE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEvB,EAAE,EAAEA,EAAE,CAACO,OAAO;IAAEN,WAAW;IAAEE,WAAW;IAAEE,KAAK;IAAEiB;EAAY,CAAC;AACzE,CAAC;AAACvB,EAAA,CArDIF,YAAY;AAuDlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}