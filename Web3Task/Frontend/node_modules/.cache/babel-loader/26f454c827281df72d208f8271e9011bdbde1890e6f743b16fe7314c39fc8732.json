{"ast":null,"code":"var _jsxFileName = \"/home/preet/Downloads/web3task/Web3Task/Frontend/websocket-client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect, useRef } from 'react';\n// Assuming useWebSocket is in './UseWebSocket.js' if you want to keep that setup\n// import useWebSocket from './UseWebSocket'; \nimport './App.css'; // Import the new external CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [animationState, setAnimationState] = useState('idle');\n  const [isConnected, setIsConnected] = useState(true);\n  const animationTimeoutRef = useRef(null);\n  const completionTimeoutRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      if (animationTimeoutRef.current) {\n        clearTimeout(animationTimeoutRef.current);\n      }\n      if (completionTimeoutRef.current) {\n        clearTimeout(completionTimeoutRef.current);\n      }\n    };\n  }, []);\n  const handleStartAnimation = () => {\n    // Clear any existing timeouts\n    if (animationTimeoutRef.current) {\n      clearTimeout(animationTimeoutRef.current);\n    }\n    if (completionTimeoutRef.current) {\n      clearTimeout(completionTimeoutRef.current);\n    }\n\n    // Always start from idle state\n    setAnimationState('idle');\n\n    // Small delay to ensure state reset, then start expanding\n    setTimeout(() => {\n      setAnimationState('expanding');\n\n      // After expansion completes, start shrinking\n      animationTimeoutRef.current = setTimeout(() => {\n        setAnimationState('shrinking');\n\n        // After shrinking completes, mark as completed\n        setTimeout(() => {\n          setAnimationState('completed');\n\n          // After completion animation, reset to idle\n          completionTimeoutRef.current = setTimeout(() => {\n            setAnimationState('idle');\n          }, 1200); // Duration of completion fade out\n        }, 1000); // Duration of shrinking animation\n      }, 2000); // Duration of expanding animation\n    }, 50); // Small delay to ensure state reset\n  };\n  const handleStopAnimation = () => {\n    if (animationTimeoutRef.current) {\n      clearTimeout(animationTimeoutRef.current);\n    }\n    if (completionTimeoutRef.current) {\n      clearTimeout(completionTimeoutRef.current);\n    }\n    setAnimationState('idle');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: styles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animation-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"animation-text\",\n          children: \"Apple Intelligence\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-bar-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `gradient-bar ${animationState}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartAnimation,\n          disabled: !isConnected || animationState === 'expanding' || animationState === 'shrinking',\n          className: \"start-button\",\n          children: \"Start Animation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStopAnimation,\n          disabled: !isConnected || animationState === 'idle',\n          className: \"stop-button\",\n          children: \"Stop Animation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"connection-status\",\n        children: [\"Connection Status: \", isConnected ? 'ðŸŸ¢ Connected' : 'ðŸ”´ Disconnected']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"DYhFIUiocqvoHOKy3QMVMIuenGA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","animationState","setAnimationState","isConnected","setIsConnected","animationTimeoutRef","completionTimeoutRef","current","clearTimeout","handleStartAnimation","setTimeout","handleStopAnimation","children","styles","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/preet/Downloads/web3task/Web3Task/Frontend/websocket-client/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect, useRef } from 'react';\n// Assuming useWebSocket is in './UseWebSocket.js' if you want to keep that setup\n// import useWebSocket from './UseWebSocket'; \nimport './App.css'; // Import the new external CSS file\nfunction App() {\n  const [animationState, setAnimationState] = useState('idle');\n  const [isConnected, setIsConnected] = useState(true);\n  const animationTimeoutRef = useRef(null);\n  const completionTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    return () => {\n      if (animationTimeoutRef.current) {\n        clearTimeout(animationTimeoutRef.current);\n      }\n      if (completionTimeoutRef.current) {\n        clearTimeout(completionTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const handleStartAnimation = () => {\n    // Clear any existing timeouts\n    if (animationTimeoutRef.current) {\n      clearTimeout(animationTimeoutRef.current);\n    }\n    if (completionTimeoutRef.current) {\n      clearTimeout(completionTimeoutRef.current);\n    }\n\n    // Always start from idle state\n    setAnimationState('idle');\n    \n    // Small delay to ensure state reset, then start expanding\n    setTimeout(() => {\n      setAnimationState('expanding');\n      \n      // After expansion completes, start shrinking\n      animationTimeoutRef.current = setTimeout(() => {\n        setAnimationState('shrinking');\n        \n        // After shrinking completes, mark as completed\n        setTimeout(() => {\n          setAnimationState('completed');\n          \n          // After completion animation, reset to idle\n          completionTimeoutRef.current = setTimeout(() => {\n            setAnimationState('idle');\n          }, 1200); // Duration of completion fade out\n        }, 1000); // Duration of shrinking animation\n      }, 2000); // Duration of expanding animation\n    }, 50); // Small delay to ensure state reset\n  };\n\n  const handleStopAnimation = () => {\n    if (animationTimeoutRef.current) {\n      clearTimeout(animationTimeoutRef.current);\n    }\n    if (completionTimeoutRef.current) {\n      clearTimeout(completionTimeoutRef.current);\n    }\n    \n    setAnimationState('idle');\n  };\n\n  return (\n    <>\n      <style>{styles}</style>\n      <div className=\"app\">\n        <div className=\"animation-container\">\n          <h2 className=\"animation-text\">\n            Apple Intelligence\n          </h2>\n\n          <div className=\"gradient-bar-container\">\n            <div className={`gradient-bar ${animationState}`}></div>\n          </div>\n        </div>\n\n        <div className=\"controls\">\n          <button \n            onClick={handleStartAnimation}\n            disabled={!isConnected || (animationState === 'expanding' || animationState === 'shrinking')}\n            className=\"start-button\"\n          >\n            Start Animation\n          </button>\n          <button \n            onClick={handleStopAnimation}\n            disabled={!isConnected || animationState === 'idle'}\n            className=\"stop-button\"\n          >\n            Stop Animation\n          </button>\n        </div>\n\n        <p className=\"connection-status\">\n          Connection Status: {isConnected ? 'ðŸŸ¢ Connected' : 'ðŸ”´ Disconnected'}\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}